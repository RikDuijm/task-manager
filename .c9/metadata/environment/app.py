{"changed":true,"filter":false,"title":"app.py","tooltip":"/app.py","value":"import os\nfrom flask import Flask, render_template, redirect, request, url_for\nfrom flask_pymongo import PyMongo\nfrom bson.objectid import ObjectId\n\napp = Flask(__name__)\n\napp.config[\"MONGO_DBNAME\"] = 'task_manager'\napp.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')\n\n# Create an instance of PyMongo. Add the app into that with a constructor method.\nmongo = PyMongo(app)\n\n\"\"\"\n- Make connection to the database\n- render a template (tasks.html)\n- supply a tasks collection (tasks=mongo.db.tasks,), which will be returned from making a call directly to Mongo.\n- with the find() method, which will return everything.\n\"\"\"\n@app.route('/') # this is called a decorator\n@app.route('/get_tasks')\ndef get_tasks():\n    return render_template(\"tasks.html\", tasks=mongo.db.tasks.find())\n\n@app.route('/add_task')\ndef add_task():\n    return render_template('addtask.html',\n                           categories=mongo.db.categories.find())\n\n# By submitting a form, we must refer to the HTTP method that will be used to deliver the form data: POST.\n@app.route('/insert_task', methods=['POST'])\ndef insert_task():\n    tasks = mongo.db.tasks\n    tasks.insert_one(request.form.to_dict())\n# Redirect to get_tasks, so we can view that new task in our collection.    \n    return redirect(url_for('get_tasks'))\n    \n@app.route('/edit_task/<task_id>')\ndef edit_task(task_id):\n    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})\n    all_categories = mongo.db.categories.find()\n    return render_template('edittask.html', task=the_task,\n                           categories=all_categories)\n\n\n@app.route('/update_task/<task_id>', methods=[\"POST\"])\ndef update_task(task_id):\n    tasks = mongo.db.tasks\n    tasks.update( {'_id': ObjectId(task_id)},\n    {\n        'task_name':request.form.get('task_name'),\n        'category_name':request.form.get('category_name'),\n        'task_description': request.form.get('task_description'),\n        'due_date': request.form.get('due_date'),\n        'is_urgent':request.form.get('is_urgent')\n    })\n    return redirect(url_for('get_tasks'))\n\n    \nif __name__ == '__main__':\n    app.run(host=os.environ.get('IP'),\n            port=int(os.environ.get('PORT')),\n            debug=True)","undoManager":{"mark":98,"position":100,"stack":[[{"start":{"row":22,"column":3},"end":{"row":22,"column":4},"action":"insert","lines":["-"],"id":169}],[{"start":{"row":22,"column":4},"end":{"row":22,"column":5},"action":"insert","lines":[" "],"id":170}],[{"start":{"row":22,"column":3},"end":{"row":23,"column":0},"action":"insert","lines":["",""],"id":171}],[{"start":{"row":23,"column":33},"end":{"row":24,"column":0},"action":"insert","lines":["",""],"id":172},{"start":{"row":24,"column":0},"end":{"row":24,"column":1},"action":"insert","lines":["-"]}],[{"start":{"row":24,"column":1},"end":{"row":24,"column":2},"action":"insert","lines":[" "],"id":173}],[{"start":{"row":24,"column":2},"end":{"row":24,"column":3},"action":"remove","lines":[","],"id":174},{"start":{"row":24,"column":2},"end":{"row":24,"column":3},"action":"remove","lines":[" "]}],[{"start":{"row":24,"column":32},"end":{"row":24,"column":33},"action":"remove","lines":[","],"id":175},{"start":{"row":24,"column":32},"end":{"row":24,"column":33},"action":"remove","lines":[" "]}],[{"start":{"row":24,"column":32},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":176},{"start":{"row":25,"column":0},"end":{"row":25,"column":1},"action":"insert","lines":["-"]}],[{"start":{"row":25,"column":1},"end":{"row":25,"column":2},"action":"insert","lines":[" "],"id":177}],[{"start":{"row":25,"column":53},"end":{"row":26,"column":0},"action":"remove","lines":["",""],"id":178}],[{"start":{"row":26,"column":0},"end":{"row":26,"column":1},"action":"insert","lines":["-"],"id":179}],[{"start":{"row":26,"column":1},"end":{"row":26,"column":2},"action":"insert","lines":[" "],"id":180}],[{"start":{"row":26,"column":2},"end":{"row":27,"column":0},"action":"remove","lines":["",""],"id":181}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"insert","lines":["    "],"id":182}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"remove","lines":["    "],"id":183}],[{"start":{"row":27,"column":0},"end":{"row":27,"column":4},"action":"insert","lines":["    "],"id":184}],[{"start":{"row":27,"column":0},"end":{"row":27,"column":4},"action":"remove","lines":["    "],"id":185},{"start":{"row":26,"column":55},"end":{"row":27,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":26,"column":58},"end":{"row":27,"column":0},"action":"insert","lines":["",""],"id":186}],[{"start":{"row":26,"column":55},"end":{"row":26,"column":58},"action":"remove","lines":["\"\"\""],"id":187}],[{"start":{"row":26,"column":55},"end":{"row":27,"column":0},"action":"insert","lines":["",""],"id":188}],[{"start":{"row":27,"column":0},"end":{"row":27,"column":3},"action":"insert","lines":["\"\"\""],"id":189}],[{"start":{"row":27,"column":0},"end":{"row":27,"column":3},"action":"remove","lines":["\"\"\""],"id":190}],[{"start":{"row":27,"column":0},"end":{"row":27,"column":2},"action":"insert","lines":["\"\""],"id":191}],[{"start":{"row":27,"column":2},"end":{"row":27,"column":3},"action":"insert","lines":["\""],"id":192}],[{"start":{"row":22,"column":0},"end":{"row":27,"column":3},"action":"remove","lines":["\"\"\"","- Make connection to the database","- render a template (tasks.html)","- supply a tasks collection (tasks=mongo.db.tasks,), which will be returned from making a call directly to Mongo.","- with the find() method, which will return everything.","\"\"\""],"id":193}],[{"start":{"row":21,"column":44},"end":{"row":22,"column":0},"action":"remove","lines":["",""],"id":194}],[{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"remove","lines":["",""],"id":195}],[{"start":{"row":21,"column":44},"end":{"row":22,"column":0},"action":"insert","lines":["",""],"id":196},{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":23,"column":0},"end":{"row":28,"column":3},"action":"insert","lines":["\"\"\"","- Make connection to the database","- render a template (tasks.html)","- supply a tasks collection (tasks=mongo.db.tasks,), which will be returned from making a call directly to Mongo.","- with the find() method, which will return everything.","\"\"\""],"id":197}],[{"start":{"row":28,"column":3},"end":{"row":29,"column":0},"action":"insert","lines":["",""],"id":198}],[{"start":{"row":23,"column":0},"end":{"row":28,"column":3},"action":"remove","lines":["\"\"\"","- Make connection to the database","- render a template (tasks.html)","- supply a tasks collection (tasks=mongo.db.tasks,), which will be returned from making a call directly to Mongo.","- with the find() method, which will return everything.","\"\"\""],"id":199}],[{"start":{"row":20,"column":0},"end":{"row":21,"column":0},"action":"insert","lines":["",""],"id":200}],[{"start":{"row":21,"column":0},"end":{"row":26,"column":3},"action":"insert","lines":["\"\"\"","- Make connection to the database","- render a template (tasks.html)","- supply a tasks collection (tasks=mongo.db.tasks,), which will be returned from making a call directly to Mongo.","- with the find() method, which will return everything.","\"\"\""],"id":201}],[{"start":{"row":26,"column":3},"end":{"row":27,"column":0},"action":"insert","lines":["",""],"id":202}],[{"start":{"row":29,"column":0},"end":{"row":30,"column":0},"action":"remove","lines":["",""],"id":203},{"start":{"row":29,"column":0},"end":{"row":30,"column":0},"action":"remove","lines":["",""]},{"start":{"row":29,"column":0},"end":{"row":30,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":27,"column":0},"end":{"row":28,"column":0},"action":"remove","lines":["",""],"id":204}],[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"remove","lines":["",""],"id":205}],[{"start":{"row":30,"column":0},"end":{"row":31,"column":0},"action":"insert","lines":["",""],"id":206}],[{"start":{"row":31,"column":0},"end":{"row":36,"column":23},"action":"remove","lines":["","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":210},{"start":{"row":31,"column":0},"end":{"row":39,"column":23},"action":"insert","lines":["@app.route('/add_task')","def add_task():","    return render_template('addtask.html')","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"]}],[{"start":{"row":0,"column":0},"end":{"row":14,"column":3},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","# MongoDB stores its data in a JSON like format called BSON.","from bson.objectid import ObjectId ","","","app = Flask(__name__)","","# add the Mongo database name and the URL linking to that database.","app.config[\"MONGO_DBNAME\"] = 'task_manager'","\"\"\"","It's not good practice to have our username and our password in our application like this. When we push it up to GitHub, it's going to be visible to the whole world.","It's far better to use an environment variable, which is what I suggest you do in production. See notes in NoSQL - Mongo - Heroku.","\"\"\""],"id":224},{"start":{"row":0,"column":0},"end":{"row":7,"column":43},"action":"insert","lines":["  ","import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'"]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":[" "],"id":225},{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":[" "]}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""],"id":226}],[{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["",""],"id":230},{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":9,"column":0},"end":{"row":10,"column":71},"action":"insert","lines":["app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')"],"id":231}],[{"start":{"row":6,"column":0},"end":{"row":7,"column":134},"action":"remove","lines":["app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = 'mongodb+srv://held38:2109Guevara@myfirstcluster-kmcfg.mongodb.net/task_manager?retryWrites=true&w=majority'"],"id":232},{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":24,"column":0},"end":{"row":27,"column":0},"action":"remove","lines":["@app.route('/add_task')","def add_task():","    return render_template('addtask.html')",""],"id":233},{"start":{"row":24,"column":0},"end":{"row":27,"column":65},"action":"insert","lines":["@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())"]}],[{"start":{"row":28,"column":0},"end":{"row":29,"column":0},"action":"insert","lines":["",""],"id":234}],[{"start":{"row":29,"column":0},"end":{"row":33,"column":41},"action":"insert","lines":["@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks = mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))"],"id":235}],[{"start":{"row":33,"column":41},"end":{"row":34,"column":0},"action":"insert","lines":["",""],"id":236},{"start":{"row":34,"column":0},"end":{"row":34,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":28,"column":0},"end":{"row":29,"column":0},"action":"insert","lines":["",""],"id":237}],[{"start":{"row":29,"column":0},"end":{"row":29,"column":1},"action":"insert","lines":["#"],"id":238}],[{"start":{"row":29,"column":1},"end":{"row":29,"column":2},"action":"insert","lines":[" "],"id":239}],[{"start":{"row":29,"column":2},"end":{"row":29,"column":149},"action":"insert","lines":["Now, because we're submitting a form, and we're submitting using POST, we must refer to the HTTP method that will be used to deliver the form data."],"id":240}],[{"start":{"row":29,"column":2},"end":{"row":29,"column":8},"action":"remove","lines":["Now, b"],"id":241},{"start":{"row":29,"column":2},"end":{"row":29,"column":3},"action":"insert","lines":["B"]}],[{"start":{"row":29,"column":35},"end":{"row":29,"column":68},"action":"remove","lines":["and we're submitting using POST, "],"id":242}],[{"start":{"row":29,"column":2},"end":{"row":29,"column":15},"action":"remove","lines":["Because we're"],"id":243},{"start":{"row":29,"column":2},"end":{"row":29,"column":3},"action":"insert","lines":["B"]},{"start":{"row":29,"column":3},"end":{"row":29,"column":4},"action":"insert","lines":["y"]}],[{"start":{"row":29,"column":99},"end":{"row":29,"column":100},"action":"insert","lines":[":"],"id":244}],[{"start":{"row":29,"column":100},"end":{"row":29,"column":101},"action":"insert","lines":[" "],"id":245},{"start":{"row":29,"column":101},"end":{"row":29,"column":102},"action":"insert","lines":["P"]},{"start":{"row":29,"column":102},"end":{"row":29,"column":103},"action":"insert","lines":["{"]}],[{"start":{"row":29,"column":102},"end":{"row":29,"column":103},"action":"remove","lines":["{"],"id":246}],[{"start":{"row":29,"column":102},"end":{"row":29,"column":103},"action":"insert","lines":["O"],"id":247},{"start":{"row":29,"column":103},"end":{"row":29,"column":104},"action":"insert","lines":["S"]},{"start":{"row":29,"column":104},"end":{"row":29,"column":105},"action":"insert","lines":["T"]}],[{"start":{"row":32,"column":26},"end":{"row":33,"column":0},"action":"insert","lines":["",""],"id":248},{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"insert","lines":["    "],"id":249}],[{"start":{"row":33,"column":4},"end":{"row":33,"column":5},"action":"insert","lines":["#"],"id":250}],[{"start":{"row":33,"column":5},"end":{"row":33,"column":6},"action":"insert","lines":[" "],"id":251}],[{"start":{"row":33,"column":6},"end":{"row":34,"column":17},"action":"insert","lines":["We go back to Mongo, we get the tasks collection, and then we do a task_insert.","We do insert_one."],"id":252}],[{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"remove","lines":["    "],"id":253}],[{"start":{"row":34,"column":0},"end":{"row":34,"column":1},"action":"insert","lines":["#"],"id":254}],[{"start":{"row":34,"column":1},"end":{"row":34,"column":2},"action":"insert","lines":[" "],"id":255}],[{"start":{"row":34,"column":20},"end":{"row":34,"column":50},"action":"insert","lines":["What we insert is the request."],"id":256}],[{"start":{"row":34,"column":50},"end":{"row":34,"column":51},"action":"insert","lines":[" "],"id":257}],[{"start":{"row":34,"column":51},"end":{"row":36,"column":41},"action":"insert","lines":["Remember, whenever you submit information to a URI or to some web location, it is submitted in the form of a request object.","We grab that request object.","And inside that, we say show me the form."],"id":258}],[{"start":{"row":35,"column":0},"end":{"row":35,"column":1},"action":"insert","lines":["#"],"id":259}],[{"start":{"row":35,"column":1},"end":{"row":35,"column":2},"action":"insert","lines":[" "],"id":260}],[{"start":{"row":35,"column":30},"end":{"row":36,"column":0},"action":"remove","lines":["",""],"id":261}],[{"start":{"row":35,"column":72},"end":{"row":35,"column":174},"action":"insert","lines":["And we're converting that form, in our case, to a dictionary, so it can easily be understood by Mongo."],"id":262}],[{"start":{"row":36,"column":44},"end":{"row":37,"column":0},"action":"insert","lines":["",""],"id":263},{"start":{"row":37,"column":0},"end":{"row":37,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":37,"column":0},"end":{"row":37,"column":1},"action":"insert","lines":["#"],"id":264}],[{"start":{"row":37,"column":1},"end":{"row":37,"column":2},"action":"insert","lines":[" "],"id":265}],[{"start":{"row":37,"column":2},"end":{"row":37,"column":93},"action":"insert","lines":["Once that's done, we redirect to get_tasks, so we can view that new task in our collection."],"id":266}],[{"start":{"row":37,"column":2},"end":{"row":37,"column":24},"action":"remove","lines":["Once that's done, we r"],"id":267},{"start":{"row":37,"column":2},"end":{"row":37,"column":3},"action":"insert","lines":["R"]}],[{"start":{"row":33,"column":0},"end":{"row":34,"column":0},"action":"insert","lines":["",""],"id":269},{"start":{"row":34,"column":0},"end":{"row":35,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":34,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)",""],"id":270}],[{"start":{"row":42,"column":0},"end":{"row":42,"column":4},"action":"remove","lines":["    "],"id":271}],[{"start":{"row":42,"column":0},"end":{"row":42,"column":4},"action":"insert","lines":["    "],"id":272}],[{"start":{"row":42,"column":0},"end":{"row":45,"column":4},"action":"remove","lines":["    tasks.insert_one(request.form.to_dict())","# Redirect to get_tasks, so we can view that new task in our collection.    ","    return redirect(url_for('get_tasks'))","    "],"id":273}],[{"start":{"row":32,"column":26},"end":{"row":33,"column":0},"action":"insert","lines":["",""],"id":274},{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":33,"column":4},"end":{"row":36,"column":4},"action":"insert","lines":["    tasks.insert_one(request.form.to_dict())","# Redirect to get_tasks, so we can view that new task in our collection.    ","    return redirect(url_for('get_tasks'))","    "],"id":275}],[{"start":{"row":33,"column":4},"end":{"row":33,"column":8},"action":"remove","lines":["    "],"id":276}],[{"start":{"row":42,"column":0},"end":{"row":44,"column":41},"action":"remove","lines":["    tasks.insert_one(request.form.to_dict())","# Redirect to get_tasks, so we can view that new task in our collection.    ","    return redirect(url_for('get_tasks'))"],"id":277}],[{"start":{"row":32,"column":26},"end":{"row":33,"column":0},"action":"insert","lines":["",""],"id":278},{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"insert","lines":["    "]},{"start":{"row":33,"column":4},"end":{"row":34,"column":0},"action":"insert","lines":["",""]},{"start":{"row":34,"column":0},"end":{"row":34,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":34,"column":4},"end":{"row":36,"column":41},"action":"insert","lines":["    tasks.insert_one(request.form.to_dict())","# Redirect to get_tasks, so we can view that new task in our collection.    ","    return redirect(url_for('get_tasks'))"],"id":279}],[{"start":{"row":36,"column":41},"end":{"row":37,"column":0},"action":"insert","lines":["",""],"id":280},{"start":{"row":37,"column":0},"end":{"row":37,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":34,"column":4},"end":{"row":34,"column":8},"action":"remove","lines":["    "],"id":281}],[{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"remove","lines":["    "],"id":282},{"start":{"row":32,"column":26},"end":{"row":33,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":44,"column":0},"end":{"row":45,"column":0},"action":"remove","lines":["",""],"id":283},{"start":{"row":44,"column":0},"end":{"row":45,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":20,"column":13},"end":{"row":20,"column":22},"action":"remove","lines":["get_tasks"],"id":284},{"start":{"row":20,"column":13},"end":{"row":20,"column":22},"action":"insert","lines":["get_tasks"]}],[{"start":{"row":40,"column":15},"end":{"row":40,"column":16},"action":"remove","lines":[" "],"id":285}],[{"start":{"row":38,"column":0},"end":{"row":44,"column":0},"action":"remove","lines":["@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task = mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)",""],"id":286}],[{"start":{"row":38,"column":0},"end":{"row":58,"column":0},"action":"insert","lines":["@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","@app.route('/update_task/<task_id>', methods=[\"POST\"])","def update_task(task_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(task_id)},","    {","        'task_name':request.form.get('task_name'),","        'category_name':request.form.get('category_name'),","        'task_description': request.form.get('task_description'),","        'due_date': request.form.get('due_date'),","        'is_urgent':request.form.get('is_urgent')","    })","    return redirect(url_for('get_tasks'))",""],"id":287}],[{"start":{"row":37,"column":0},"end":{"row":38,"column":0},"action":"remove","lines":["",""],"id":288}],[{"start":{"row":40,"column":21},"end":{"row":40,"column":22},"action":"remove","lines":[" "],"id":289}]]},"ace":{"folds":[],"scrolltop":180,"scrollleft":0,"selection":{"start":{"row":41,"column":21},"end":{"row":41,"column":21},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":25,"state":"start","mode":"ace/mode/python"}},"timestamp":1568631866602}